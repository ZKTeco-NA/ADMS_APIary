FORMAT: 1A
HOST: http://www.google.com

# ADMS
Devices API is a service similar to its physical paper presence on your table.

# Group Devices
Devices related resources of the **Devices API**

## Devices Collection [/devices?{sn}{name}{ip}{state}{productName}{pagination}{offset}]
### List Devices [GET]

+ Parameters
    + sn (optional, string, `1234`) ... Text `sn` of the desired device(s).
    + name (optional, string, `device_1`) ... Text `name` of the desired device(s).
    + ip (optional, string, `192.168.0.0`) ... Text `ip` of the desired device(s).
    + state (optional, number, `2`) ... Numeric `state` of the desired device(s). Lookup value.
    + productName (optional, string, `zkproduct`) ... Text `productName` of the desired device(s).
    + pagination (optional, integer, `10`) ... Numeric `pagination` of the desired pagination size.
    + offset (optional, integer, `0`) ... Numeric `offset` of the desired offset of the pagination.

+ Response 200 (application/json)

        [
            { "sn": "1234", 
              "name": "device", 
              "ip": "192.168.0.0", 
              "state": 2, 
              "productName": "myProduct", 
              "userCount": 2, 
              "fingerPrintCount": 3, 
              "transactionCount": 12
            }, 
            { "sn": "12345",
              "name": "device2", 
              "ip": "192.168.10.0", 
              "state": 1, 
              "productName": "myProduct2", 
              "userCount": 12, 
              "fingerPrintCount": 13, 
              "transactionCount": 11
            }
        ]

## Devices Collection [/devices]
### Create a Device [POST]
State allowed values: DvcSttsA (Active) - DvcSttsI (Inactive) - DvcSttsC (Connected) - DvcSttsD (Disconnected)</br>
Error codes will be either:</br>
a) Missing mndatory field (SN or IP)</br>
b) Duplicate entry (SN or IP)</br>
c) IP format is wrong
+ Request (application/json)

        { "sn": "1234", 
          "name": "device", 
          "ip": "192.168.0.0"
        }
        
+ Response 201 (application/json)

        { "id": 3, 
          "state": "DvcSttsD" 
        }
        
+ Response 400 (application/json)

        [
            { "errorCode": "3" },
            { "errorCode": "6" }
        ]

## Device [/devices/{id}]
A single Device object with all its details

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Device to perform action with. Has example value.

### Show/Retrieve a Device [GET]
+ Response 200 (application/json)

    + Body

            { "sn": "1234", 
              "name": "device", 
              "ip": "192.168.0.0", 
              "state": 2, 
              "productName": "myProduct", 
              "userCount": 2, 
              "fingerPrintCount": 3, 
              "transactionCount": 12
            }
        

### Remove a Device [DELETE]
+ Response 204

+ Response 400 (application/json)

        { "errorCode": "6" }
        
### Update a Device [POST]
State allowed values: DvcSttsA (Active) - DvcSttsI (Inactive) - DvcSttsC (Connected) - DvcSttsD (Disconnected)</br>
Error codes will be either:</br>
a) Missing mndatory field (SN or IP)</br>
b) Duplicate entry (SN or IP)</br>
c) IP format is wrong</br>
d) Invalid id
+ Request (application/json)

        { "sn": "1234", 
          "name": "device", 
          "ip": "192.168.0.0", 
          "state": 2, 
          "productName": "myProduct", 
          "userCount": 2, 
          "fingerPrintCount": 3, 
          "transactionCount": 12
        }
        
+ Response 200 
        
+ Response 400 (application/json)

        [
            { "errorCode": "3" },
            { "errorCode": "6" }
        ]

## Device [/devices/sn/{sn}]
A single Device object with all its details, by serial number

+ Parameters
    + sn (required, string, `1`) ... Text `sn` of the Device to perform action with. Has example value.

### Show/Retrieve a Device [GET]
+ Response 200 (application/json)

    + Body

            { "sn": "1234", 
              "name": "device", 
              "ip": "192.168.0.0", 
              "state": 2, 
              "productName": "myProduct", 
              "userCount": 2, 
              "fingerPrintCount": 3, 
              "transactionCount": 12
            }
        

### Remove a Device [DELETE]
+ Response 204

+ Response 400 (application/json)

        { "errorCode": "6" }
        
### Update a Device [POST]
State allowed values: DvcSttsA (Active) - DvcSttsI (Inactive) - DvcSttsC (Connected) - DvcSttsD (Disconnected)</br>
Error codes will be either:</br>
a) Missing mndatory field (IP)</br>
b) Duplicate entry (IP)</br>
c) IP format is wrong</br>
d) Invalid serial
+ Request (application/json)

        { "name": "device", 
          "ip": "192.168.0.0", 
          "state": 2, 
          "productName": "myProduct", 
          "userCount": 2, 
          "fingerPrintCount": 3, 
          "transactionCount": 12
        }
        
+ Response 200 
        
+ Response 400 (application/json)

        [
            { "errorCode": "3" },
            { "errorCode": "6" }
        ]

# Group Device Command
Available Commands related resources of the **Device Command API**

## Devices Command Collection [/deviceCommand?{sn}{status}{pagination}{offset}]
### List Device Commands [GET]

+ Parameters
    + sn (optional, string, `1234`) ... Text `sn` of the desired device(s).
    + status (optional, number, `2`) ... Numeric `status` of the desired device command(s). Lookup value.
    + pagination (optional, integer, `10`) ... Numeric `pagination` of the desired pagination size.
    + offset (optional, integer, `0`) ... Numeric `offset` of the desired offset of the pagination.

+ Response 200 (application/json)

        [
            { "seq": 1,
              "sn": "1234", 
              "command": "reboot",
              "status": 2, 
              "caller": "myProduct"
            }, 
            { "seq": 2,
              "sn": "1234", 
              "command": "check",
              "status": 1, 
              "caller": "myProduct"
            }
        ]

## Collect Device's Users  [/command/check-user-info?{sn}]
### Check Out Person Information from a specified Device [GET]
Error codes will be either:</br>
a) Invalid serial
+ Parameters
    + sn (required, string, `1234`) ... Text `sn` of the desired device(s).

+ Response 200

+ Response 400 (application/json)

        [
            { "errorCode": "3" },
            { "errorCode": "6" }
        ]

## Collect Device's Transactions  [/command/check-user-trans?{sn}]        
### Check Out Person Transactions(_Logs_) from a specified Device [GET]
Error codes will be either:</br>
a) Invalid serial
+ Parameters
    + sn (required, string, `1234`) ... Text `sn` of the desired device(s).

+ Response 200

+ Response 400 (application/json)

        [
            { "errorCode": "3" },
            { "errorCode": "6" }
        ]

## Reboot Device  [/command/reboot?{sn}]
### Reboot a specified Device [GET]
Error codes will be either:</br>
a) Invalid serial
+ Parameters
    + sn (required, string, `1234`) ... Text `sn` of the desired device(s).

+ Response 200

+ Response 400 (application/json)

        [
            { "errorCode": "3" },
            { "errorCode": "6" }
        ]


# Group Person
Person related resources of the **Person API**

## Person Collection [/persons?{pin}{name}{pagination}{offset}]
### List People [GET]

+ Parameters
    + pin (optional, string, `212005`) ... Text `PIN` of the desired person(s).
    + name (optional, string, `Bob`) ... Text `name` of the desired person(s).
    + pagination (optional, integer, `10`) ... Numeric `pagination` of the desired pagination size.
    + offset (optional, integer, `0`) ... Numeric `offset` of the desired offset of the pagination.

+ Response 200 (application/json)

        [
            { "id": 1,
              "pin": "203245", 
              "firstName": "Suzan",
              "middleName": "",
              "lastName": "Dave",
              "initial": "Mrs",
              "birthdate": "01-01-1990", 
              "address": "3rd floor", 
              "street": "34 xyz st.", 
              "zip": "1234", 
              "city": "Beijing", 
              "country": "China", 
              "phone": 232323, 
              "mobile": 4545454, 
              "work": 6767676,
              "gender": "F"
            }, 
            { "id": 2,
              "pin": "205245", 
              "firstName": "Bob",
              "middleName": "",
              "lastName": "Alex",
              "initial": "Mr",
              "birthdate": "19-05-1999", 
              "address": "1st floor", 
              "street": "22 abc st.", 
              "zip": "1234", 
              "city": "Beijing", 
              "country": "China", 
              "phone": 22222, 
              "mobile": 33333, 
              "work": 44444,
              "gender": "M"
            }
        ]

## Person Collection [/persons]
### Create a Person [POST]
Error codes will be either:</br>
a) Missing mndatory field (PIN)</br>
b) Duplicate entry (PIN)</br>
c) Zip format is wrong
+ Request (application/json)

        { "pin": "203245", 
          "firstName": "Suzan",
          "middleName": "",
          "lastName": "Dave",
          "initial": "Mrs",
          "birthdate": "01-01-1990", 
          "address": "3rd floor", 
          "street": "34 xyz st.", 
          "zip": "1234", 
          "city": "Beijing", 
          "country": "China", 
          "phone": 232323, 
          "mobile": 4545454, 
          "work": 6767676,
          "gender": "F"
        }
        
+ Response 201 (application/json)

        { "id": 3 }
        
+ Response 400 (application/json)

        [
            { "errorCode": "3" },
            { "errorCode": "6" }
        ]
        
## Person [/persons/{id}]
A single Person object with all its details

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Person to perform action with. Has example value.

### Show/Retrieve a Person [GET]
+ Response 200 (application/json)

    + Body

            { "id": 3, 
              "pin": "203245", 
              "firstName": "Suzan",
              "middleName": "",
              "lastName": "Dave",
              "initial": "Mrs",
              "birthdate": "01-01-1990", 
              "address": "3rd floor", 
              "street": "34 xyz st.", 
              "zip": "1234", 
              "city": "Beijing", 
              "country": "China", 
              "phone": 232323, 
              "mobile": 4545454, 
              "work": 6767676,
              "gender": "F"
            }
        

### Remove a Person [DELETE]
+ Response 204

+ Response 400 (application/json)

        { "errorCode": "6" }
        
### Update a Person [POST]
Error codes will be either:</br>
a) Missing mndatory field (PIN or first name or last name)</br>
b) Duplicate entry (PIN)</br>
c) Zip format is wrong</br>
d) Invalid id
+ Request (application/json)

        { "pin": "203245", 
          "firstName": "Suzan",
          "middleName": "",
          "lastName": "Dave",
          "initial": "Mrs",
          "birthdate": "01-01-1990", 
          "address": "3rd floor", 
          "street": "34 xyz st.", 
          "zip": "1234", 
          "city": "Beijing", 
          "country": "China", 
          "phone": 232323, 
          "mobile": 4545454, 
          "work": 6767676,
          "gender": "F"
        }
        
+ Response 200 
        
+ Response 400 (application/json)

        [
            { "errorCode": "3" },
            { "errorCode": "6" }
        ]

## Person [/persons/pin/{pin}]
A single Person object with all its details, by personal identification number (PIN)

+ Parameters
    + pin (required, string, `202235`) ... Text `pin` of the Person to perform action with. Has example value.

### Show/Retrieve a Person [GET]
+ Response 200 (application/json)

    + Body

            { "id": 3, 
              "pin": "203245", 
              "firstName": "Suzan",
              "middleName": "",
              "lastName": "Dave",
              "initial": "Mrs",
              "birthdate": "01-01-1990", 
              "address": "3rd floor", 
              "street": "34 xyz st.", 
              "zip": "1234", 
              "city": "Beijing", 
              "country": "China", 
              "phone": 232323, 
              "mobile": 4545454, 
              "work": 6767676,
              "gender": "F"
            }
        

### Remove a Person [DELETE]
+ Response 204

+ Response 400 (application/json)

        { "errorCode": "6" }
        
### Update a Person [POST]
Error codes will be either:</br>
a) Missing mndatory field (first name or last name)</br>
b) Zip format is wrong</br>
c) Invalid PIN
+ Request (application/json)

        { "firstName": "Suzan",
          "middleName": "",
          "lastName": "Dave",
          "initial": "Mrs",
          "birthdate": "01-01-1990", 
          "address": "3rd floor", 
          "street": "34 xyz st.", 
          "zip": "1234", 
          "city": "Beijing", 
          "country": "China", 
          "phone": 232323, 
          "mobile": 4545454, 
          "work": 6767676,
          "gender": "F"
        }
        
+ Response 200 
        
+ Response 400 (application/json)

        [
            { "errorCode": "3" },
            { "errorCode": "6" }
        ]